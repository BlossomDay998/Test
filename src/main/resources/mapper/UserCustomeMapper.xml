<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sam.dao.UserCustomMapper">
	<resultMap id="BaseResultMap" type="com.sam.entity.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_name" jdbcType="VARCHAR"
			property="userName" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="age" jdbcType="TINYINT" property="age" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, password, sex, age
	</sql>
	
	<!-- 根据用户名查询用户信息 -->
	<select id="selectUserByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select * from user
		where user_name = #{userName}
	</select>
	
	<!-- 根据性别查询用户信息 -->
	<select id="selectUserBySex" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select * from user
		where sex = #{sex,jdbcType=VARCHAR}
	</select>

	<!-- 根据用户名和密码查询用户信息 -->
	<select id="selectUserByUserNameAndPassword"
		resultMap="BaseResultMap" parameterType="map">
		SELECT * FROM `user`
		where user_name =#{userName}
		and `password`=#{password}
	</select>

	<!-- 根据性别删除用户信息 -->
	<delete id="deleteBySex" parameterType="java.lang.String">
		delete from user where sex= #{sex,jdbcType=VARCHAR}
	</delete>

	<!-- 根据用户名查询角色名 -->
	<select id="selectUserAndRoleByUserName"
		parameterType="java.lang.String"
		resultType="com.sam.entity.dto.UserDto">
		select u.id as userId,u.age,u.user_name as userName,r.role_name as roleName
		from user_role ur
		join user u on u.id=ur.user_id
		join role r on r.id=ur.role_id
		where u.user_name=#{userName}
	</select>
	
    <!-- 根据角色名查询所有用户信息 -->
	<select id="selcectUserList" parameterType="java.lang.String" resultMap="BaseResultMap">
		select u.id as userId,u.age,u.user_name as userName,u.sex,u.password
		from user_role ur
		join user u on u.id=ur.user_id
		join role r on r.id=ur.role_id
		where r.role_name= #{roleName}
	</select>
	
	<select id="selectUserAndRoleByAge" parameterType="java.lang.Integer" resultType="com.sam.entity.dto.UserDto1">
	select u.user_name as userName,u.`password`,u.age,u.sex,r.role_name as roleName
		from user_role ur
		join user u on u.id=ur.user_id
		join role r on r.id=ur.role_id
		where u.age= #{age}
	</select>
</mapper>